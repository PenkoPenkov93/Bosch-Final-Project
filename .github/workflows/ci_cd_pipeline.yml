on:
  push:
    branches:
      - production

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Validate Dockerfile
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        run: |
          docker run --rm -i hadolint/hadolint:v2.7.0 hadolint --ignore DL3008 - < Dockerfile

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Azure Container Registry
      uses: docker/login-action@v1
      with:
        registry: penkowebappregistry.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          penkowebappregistry.azurecr.io/web-app-penko:${{ github.sha }}
          penkowebappregistry.azurecr.io/web-app-penko:latest

  deploy_to_aks:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create Resource Group
      run: |
        az group create --name myresourcegroup --location westus2

    - name: Create AKS Cluster
      run: |
        az aks create --resource-group myresourcegroup --name myakscluster --node-count 1 --enable-addons monitoring --generate-ssh-keys

    - name: Get AKS Credentials
      run: |
        az aks get-credentials --resource-group myresourcegroup --name myakscluster

    - name: Install kubectl
      run: |
        sudo az aks install-cli

    - name: Install jq and yq
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        sudo wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64 && sudo chmod +x /usr/bin/yq

    - name: Apply manifests
      run: |
        kubectl apply -f manifest/ -n mynamespace
  #      kubectl rollout status deployment/web-app-penko -n mynamespace
  #      kubectl rollout restart deployment/web-app-penko -n mynamespace
  #      kubectl rollout status deployment/web-app-penko -n mynamespace
